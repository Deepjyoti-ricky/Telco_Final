-- =====================================================
-- Telco Network Optimization Suite - Table Creation
-- =====================================================
-- This script creates all necessary tables for the application

-- Set context
USE DATABASE TELCO_NETWORK_OPTIMIZATION_PROD;
USE SCHEMA RAW;

-- =====================================================
-- 1. CELL TOWERS TABLE
-- =====================================================
CREATE OR REPLACE TABLE CELL_TOWERS (
    CELL_TOWER_ID VARCHAR(50) PRIMARY KEY,
    LATITUDE FLOAT NOT NULL,
    LONGITUDE FLOAT NOT NULL,
    FAILURE_RATE FLOAT DEFAULT 0.0,
    SIGNAL_STRENGTH FLOAT,
    COVERAGE_RADIUS FLOAT,
    STATUS VARCHAR(20) DEFAULT 'Operational',
    REGION VARCHAR(50),
    LAST_MAINTENANCE_DATE TIMESTAMP_NTZ,
    INSTALLATION_DATE TIMESTAMP_NTZ,
    TOWER_HEIGHT FLOAT,
    EQUIPMENT_TYPE VARCHAR(100),
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Add comments
COMMENT ON TABLE CELL_TOWERS IS 'Cell tower infrastructure and performance data';
COMMENT ON COLUMN CELL_TOWERS.FAILURE_RATE IS 'Failure rate as decimal (0-1)';
COMMENT ON COLUMN CELL_TOWERS.SIGNAL_STRENGTH IS 'Signal strength in dBm';
COMMENT ON COLUMN CELL_TOWERS.COVERAGE_RADIUS IS 'Coverage radius in kilometers';
COMMENT ON COLUMN CELL_TOWERS.STATUS IS 'Current status: Operational, Warning, Critical, Maintenance';

-- =====================================================
-- 2. SUPPORT TICKETS TABLE
-- =====================================================
CREATE OR REPLACE TABLE SUPPORT_TICKETS (
    TICKET_ID VARCHAR(50) PRIMARY KEY,
    CUSTOMER_ID VARCHAR(50),
    CELL_TOWER_ID VARCHAR(50),
    TICKET_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    ISSUE_TYPE VARCHAR(100),
    ISSUE_DESCRIPTION TEXT,
    STATUS VARCHAR(20) DEFAULT 'OPEN',
    PRIORITY VARCHAR(20),
    SENTIMENT_SCORE FLOAT,
    RESOLUTION_DATE TIMESTAMP_NTZ,
    RESPONSE_TIME_HOURS FLOAT,
    LATITUDE FLOAT,
    LONGITUDE FLOAT,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (CELL_TOWER_ID) REFERENCES CELL_TOWERS(CELL_TOWER_ID)
);

-- Add comments
COMMENT ON TABLE SUPPORT_TICKETS IS 'Customer support tickets and issues';
COMMENT ON COLUMN SUPPORT_TICKETS.SENTIMENT_SCORE IS 'Customer sentiment score (1-5)';
COMMENT ON COLUMN SUPPORT_TICKETS.STATUS IS 'Ticket status: OPEN, IN_PROGRESS, RESOLVED, CLOSED';
COMMENT ON COLUMN SUPPORT_TICKETS.PRIORITY IS 'Priority level: LOW, MEDIUM, HIGH, CRITICAL';

-- =====================================================
-- 3. NETWORK METRICS TABLE (Time Series)
-- =====================================================
CREATE OR REPLACE TABLE NETWORK_METRICS (
    METRIC_ID VARCHAR(50) PRIMARY KEY,
    CELL_TOWER_ID VARCHAR(50),
    METRIC_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FAILURE_RATE FLOAT,
    SIGNAL_STRENGTH FLOAT,
    DATA_THROUGHPUT FLOAT,
    LATENCY_MS FLOAT,
    PACKET_LOSS_RATE FLOAT,
    ACTIVE_CONNECTIONS INT,
    BANDWIDTH_UTILIZATION FLOAT,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (CELL_TOWER_ID) REFERENCES CELL_TOWERS(CELL_TOWER_ID)
);

-- Add comments
COMMENT ON TABLE NETWORK_METRICS IS 'Time series network performance metrics';
COMMENT ON COLUMN NETWORK_METRICS.DATA_THROUGHPUT IS 'Data throughput in Mbps';
COMMENT ON COLUMN NETWORK_METRICS.LATENCY_MS IS 'Network latency in milliseconds';
COMMENT ON COLUMN NETWORK_METRICS.BANDWIDTH_UTILIZATION IS 'Bandwidth utilization percentage (0-1)';

-- =====================================================
-- 4. MAINTENANCE SCHEDULE TABLE
-- =====================================================
CREATE OR REPLACE TABLE MAINTENANCE_SCHEDULE (
    MAINTENANCE_ID VARCHAR(50) PRIMARY KEY,
    CELL_TOWER_ID VARCHAR(50),
    SCHEDULED_DATE TIMESTAMP_NTZ,
    COMPLETED_DATE TIMESTAMP_NTZ,
    MAINTENANCE_TYPE VARCHAR(100),
    TECHNICIAN_ID VARCHAR(50),
    STATUS VARCHAR(20) DEFAULT 'SCHEDULED',
    NOTES TEXT,
    COST FLOAT,
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FOREIGN KEY (CELL_TOWER_ID) REFERENCES CELL_TOWERS(CELL_TOWER_ID)
);

-- Add comments
COMMENT ON TABLE MAINTENANCE_SCHEDULE IS 'Scheduled and completed maintenance activities';
COMMENT ON COLUMN MAINTENANCE_SCHEDULE.STATUS IS 'Status: SCHEDULED, IN_PROGRESS, COMPLETED, CANCELLED';

-- =====================================================
-- 5. CUSTOMERS TABLE
-- =====================================================
CREATE OR REPLACE TABLE CUSTOMERS (
    CUSTOMER_ID VARCHAR(50) PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(200),
    EMAIL VARCHAR(200),
    PHONE VARCHAR(50),
    ADDRESS TEXT,
    LATITUDE FLOAT,
    LONGITUDE FLOAT,
    SERVICE_PLAN VARCHAR(100),
    SIGNUP_DATE TIMESTAMP_NTZ,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-- Add comments
COMMENT ON TABLE CUSTOMERS IS 'Customer information and service details';
COMMENT ON COLUMN CUSTOMERS.STATUS IS 'Customer status: ACTIVE, SUSPENDED, CHURNED';

-- =====================================================
-- 6. INDEXES FOR PERFORMANCE
-- =====================================================

-- Cell Towers indexes
CREATE INDEX IF NOT EXISTS idx_cell_towers_region ON CELL_TOWERS(REGION);
CREATE INDEX IF NOT EXISTS idx_cell_towers_status ON CELL_TOWERS(STATUS);

-- Support Tickets indexes
CREATE INDEX IF NOT EXISTS idx_support_tickets_tower ON SUPPORT_TICKETS(CELL_TOWER_ID);
CREATE INDEX IF NOT EXISTS idx_support_tickets_date ON SUPPORT_TICKETS(TICKET_DATE);
CREATE INDEX IF NOT EXISTS idx_support_tickets_status ON SUPPORT_TICKETS(STATUS);

-- Network Metrics indexes
CREATE INDEX IF NOT EXISTS idx_network_metrics_tower ON NETWORK_METRICS(CELL_TOWER_ID);
CREATE INDEX IF NOT EXISTS idx_network_metrics_date ON NETWORK_METRICS(METRIC_DATE);

-- Maintenance Schedule indexes
CREATE INDEX IF NOT EXISTS idx_maintenance_tower ON MAINTENANCE_SCHEDULE(CELL_TOWER_ID);
CREATE INDEX IF NOT EXISTS idx_maintenance_date ON MAINTENANCE_SCHEDULE(SCHEDULED_DATE);

-- =====================================================
-- VERIFICATION QUERIES
-- =====================================================

-- Show all created tables
SHOW TABLES IN SCHEMA RAW;

-- Show table details
SELECT 
    TABLE_NAME,
    ROW_COUNT,
    BYTES,
    CREATED
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'RAW'
  AND TABLE_TYPE = 'BASE TABLE'
ORDER BY TABLE_NAME;

